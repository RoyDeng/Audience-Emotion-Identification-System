@{
    ViewBag.Title = Model.Item1.Title;
}

@model Tuple<AEIS.Models.VideoModel, AEIS.Models.ProductModel>

<section class="container g-pt-50">
    <h2 class="g-color-black g-font-weight-600 text-center g-mb-60">@Model.Item1.Title</h2>
    <p id="response"></p>
    <div class="u-shadow-v24 g-bg-white rounded g-pa-20">
        <div id="vid-box"></div>
    </div>
</section>
<section class="container g-pt-100 g-pb-40">
    <div class="row justify-content-between">
        <div class="col-lg-5 g-mb-30">
            <article class="u-block-hover">
                <figure class="g-bg-cover g-bg-bluegray-opacity-0_3--after">
                    <img class="img-fluid w-100 u-block-hover__main--zoom-v1" src="@Url.Action("GetProductImage", "Product", new RouteValueDictionary { {"ProductID", Model.Item2.ProductID} })">
                </figure>
                <a class="AddToCart" ProductID="@Model.Item2.ProductID">
                    <span class="u-icon-v3 g-bg-black-opacity-0_5 g-bg-black--hover g-color-white g-rounded-50x g-cursor-pointer g-absolute-centered">
                        <i class="fa fa-cart-plus g-left-2"></i>
                    </span>
                </a>
                <div class="g-pos-abs g-bottom-20 g-left-20 g-right-20">
                    <h3 class="h4 g-mt-10 g-color-white">@Model.Item2.Name</h3>
                    <p class="g-color-white"><span class="g-font-size-20">@Math.Round(Convert.ToDecimal(Model.Item2.Price)) 元</span><span class="g-font-size-14">/@Model.Item2.Quantity 件</span></p>
                    <p class="g-color-white g-font-size-16">@ViewData["categery"]</p>
                    <small class="g-color-white">@Model.Item2.Description</small>
                </div>
            </article>
        </div>
        <div class="col-lg-6 g-mt-50 g-mb-3">
            <ul class="nav nav-justified u-nav-v1-1 u-nav-primary g-brd-bottom--md g-brd-bottom-2 g-brd-primary g-mb-20" role="tablist" data-target="nav-1-1-default-hor-left-underline" data-tabs-mobile-type="slide-up-down" data-btn-classes="btn btn-md btn-block rounded-0 u-btn-outline-primary g-mb-20">
                <li class="nav-item">
                    <a class="nav-link g-py-10 active" data-toggle="tab" href="#video-info" role="tab">影片</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link g-py-10" data-toggle="tab" href="#emotion-info" role="tab">表情</a>
                </li>
            </ul>
            <div id="nav-1-1-default-hor-left-underline" class="tab-content">
                <div class="tab-pane fade show active" id="video-info" role="tabpanel">
                    <div class="g-brd-around g-brd-gray-light-v4 g-brd-2 g-brd-green-top g-line-height-1_8 g-pa-30 g-mb-30">
                        <p class="g-font-size-13"><span id="here-now" class="g-font-size-25">0</span>人正在收看</p>
                        <button id="btn-emo" class="btn btn-md u-btn-primary g-mr-10 g-mb-15">開始偵測</button>
                        <div class="js-scrollbar g-height-280">
                            <ul id="logs" class="list-unstyled"></ul>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="emotion-info" role="tabpanel">
                    <div class="js-scrollbar g-height-280">
                        <div id="app">
                            <div id="result-container">
                                <h3>結果&nbsp;<span class="badge" data-bind="text:blobs.length">0</span></h3>
                                <div class="results" data-repeat="blobs">
                                    <canvas class="photo" data-bind="buildImage:$this"></canvas>
                                    <table class="table table-striped" data-repeat="emotionResults">
                                        <tbody>
                                            <tr>
                                                <th>臉部編號</th>
                                                <th>憤怒</th>
                                                <th>藐視</th>
                                                <th>討厭</th>
                                                <th>恐懼</th>
                                                <th>快樂</th>
                                                <th>憂傷</th>
                                                <th>驚奇</th>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <span data-bind="background-color:color,text:$index" class="badge">
                                                    </span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Anger"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Contempt"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Disgust"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Fear"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Happiness"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Sadness"></span>
                                                </td>
                                                <td>
                                                    <span data-bind="percent:Scores.Surprise"></span>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div id="wrapper">
    <canvas id="camera-canvas" hidden="true" autoplay></canvas>
</div>
<script src="~/js/jquery.min.js"></script>
<script src="https://cdn.pubnub.com/pubnub.min.js"></script>
<script src="~/js/webrtc.js"></script>
<script src="~/js/rtc-controller.js"></script>
<script src="//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.js"></script>
<script src="//cdn.rawgit.com/MagnusThor/BobTheBinder/master/src/bob.the.binder.js"></script>
<script src="//randomcolor.llllll.li/randomColor.js"></script>
<script src="~/js/XSockets.latest.js"></script>
<script src="~/js/custom.binder.js"></script>
<script src="~/js/camera.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var video_out = document.getElementById("vid-box");
        var here_now = document.getElementById('here-now');

        var num = "@Model.Item1.Number";
        var phone = window.phone = PHONE({
            number: "Viewer" + Math.floor(Math.random() * 100),
            publish_key: 'pub-c-561a7378-fa06-4c50-a331-5c0056d0163c',
            subscribe_key: 'sub-c-17b7db8a-3915-11e4-9868-02ee2ddab7fe',
            oneway: true
        });
        var ctrl = window.ctrl = CONTROLLER(phone);
        ctrl.ready(function () {
            ctrl.isStreaming(num, function (isOn) {
                if (isOn) ctrl.joinStream(num);
                else alert("直播已結束！");
            });
            addLog("進入房間：" + num);
        });
        ctrl.receive(function (session) {
            session.connected(function (session) {
                video_out.appendChild(session.video);
                addLog(session.number + "已加入。");
            });
            session.ended(function (session) { addLog(session.number + "已離開。"); });
        });
        ctrl.streamPresence(function (m) {
            here_now.innerHTML = m.occupancy;
            addLog("目前有" + m.occupancy + "人正在觀看。");
        });
        return false;
    });

    function getVideo(number) {
        return $('*[data-number="' + number + '"]');
    }

    function addLog(log) {
        $('#logs').append("<li class='g-brd-around g-brd-gray-light-v4 g-pa-20 g-mb-minus-1'>" + log + "</li>");
    }

    function errWrap(fxn, form) {
        try {
            return fxn(form);
        } catch (err) {
            alert("瀏覽器不支援WebRTC！");
            return false;
        }
    }

    var ViewModel = (function () {
        var ctor = function () {
            this.photo = "";
            this.emotionResults = [];
            this.blobs = [];
        };
        return ctor;
    })();

    var ws, emotionController, camera, viewModel, colors;
    var VideoID = @Model.Item1.VideoID;
    var main = function (evt) {
        viewModel = new ViewModel();

        colors = randomColor({
            hue: 'pink', count: 18
        });

        Bob.apply(Bob.binders).bind(document.querySelector("#app"), viewModel);

        ws = new XSockets.WebSocket("wss://webrtoxfordai.azurewebsites.net:443/", ["emotion"]);

        emotionController = ws.controller("emotion");
        emotionController.on("emotiondetected", function (emotionResult) {

            var uint8Array = new Uint8Array(emotionResult.binary);
            var arrayBuffer = uint8Array.buffer;
            var remoteBlob = new Blob([arrayBuffer], { type: "image/jpg" });

            viewModel.blobs.push({
                url: URL.createObjectURL(remoteBlob),
                emotionResults: emotionResult.data.map(function (result, index) {
                    Object.defineProperty(result, 'color', {
                        value: colors[index],
                        writable: false
                    });
                    Object.defineProperty(result, '$index', {
                        value: index,
                        writable: false
                    });
                    return result;
                })
            });

            var data = $.param({ "VideoID": VideoID, "emotionResult": emotionResult.data });
            $.post("UploadEmotionProcess", data);
        });

        emotionController.onopen = function (ci) {
            console.log("與EmotionController連接", ci);
        };

        document.querySelector("#btn-emo").addEventListener("click", function (evt) {
            evt.target.disabled = true;
            if (!camera) return;
            setInterval(
            function () {
                camera.takePicture(function (blob, url) {
                    var arrayBuffer;
                    var fileReader = new FileReader();
                    fileReader.onload = function () {
                        arrayBuffer = this.result;
                        emotionController.invokeBinary("DetectEmotion", arrayBuffer);
                    };
                    fileReader.readAsArrayBuffer(blob);
                });
            }, 3000);
        });
        navigator.getUserMedia({ audio: false, video: true },
            function (stream) {
                camera = new Camera(stream, 640, 480, document.querySelector("#camera-canvas"));
            }, function (err) {
                console.log("gumError", err);
            });
    };
    document.addEventListener("DOMContentLoaded", main);
</script>